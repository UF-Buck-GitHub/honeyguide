* scenario
Joy requires reports run on redi data at a rapid pace. She not only wants raw data but
also wants some analysis of the data that is also used as a check to make sure that
what we are doing is reasonable. This is a lot of work and thinking so as much of it as
possible should be automated.
* goals
** Quail running automatically
This is done in the container. It will automatically pull from the redcap project every
day.
*** CRON start
We run cron in the foreground with the `cron -f` command. You can set the time it will run
by changing the minute and hour environment variables in the .env file.
The following is the relevant section in the Dockerfile 
#+BEGIN_SRC docker
ARG MINUTE
ARG HOUR
RUN printf "%s %s * * * bash /home/hcvprod/quail_user_script.sh > /proc/1/fd/1 2> /proc/1/fd/2\n" $MINUTE $HOUR \
    | crontab
#+END_SRC
Note that you could add more variables to set more parts of the cron if desired.
*** Timezone
This sets the timezone in the container to make the cron run at the right time
#+BEGIN_SRC docker
ENV TZ=America/New_York
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
#+END_SRC
** Quail databases loaded into postgres
There is a program called pgloader that is on the quail container. It can be scheduled
to load data from quail batches into postgres at regular intervals. Both sqlite databases
should be loaded in sequentially. 
TODO: There is a bug where quail metadata does not load properly. It is fixed in the run script
but a better fix is to fix the QUAIL program itself.
** pg admin
Not sure if this container will stick around but for now it allows us to look into the
postgres database very similarly to phpMyAdmin but for postgres.
** redash integration RDBMS
Redash is able to access the postgres container and database but there is no autommatic
process to add new databases from particular dates automatically. There should be another
container that can do things like manage the redash data.
** automatic report creation
This will be part of what redash will do.
* warts / weird things
** pgloader
[[https://github.com/dimitri/pgloader/wiki/Running-in-Docker-(SBCL-warning)][pgloader sbcl error]]

I was able to get this to work with the debian package on stretch.
#+BEGIN_SRC bash

pgloader --version 
# 3.3.2
pgloader sqlite:///home/hcvprod/quailroot/batches/hcvprod/<DATE>/data.db \
         postgresql://<postgres_user>:<postgres_pass>@postgres/<database_name>
#+END_SRC

the database you are loading things into needs to already exist in order for this to
work. I'm not sure how long this takes or if it is safe to stop.

There is an ephemeral user for the loading of the data into postgres.
** postgres
Need to find a way to create databases remotely for the pgloader program
did it and got the client on the quail container
#+BEGIN_SRC bash
psql -h postgres -U postgres -W postgres
#+END_SRC
now i need to be able to make this non interactive
[[https://stackoverflow.com/questions/6523019/postgresql-scripting-psql-execution-with-password][stackoverflow answers that provide options]]
[[https://www.postgresql.org/docs/current/static/client-authentication.html][postgres authentication]]

we do this with the ~/.pgpass file
** redash sql errors on docker-compose up
When using redash with docker there are multiple sql errors that happen right in a row.
this can be solved by running 
#+BEGIN_SRC bash
docker exec -it honeyguide_server_1 bash
#+END_SRC
on the host machine, and then when in the container
#+BEGIN_SRC bash
./manage.py database create_tables
#+END_SRC
This behavior is terrible and there is an issue addressing this.
https://github.com/getredash/redash/issues/2331

This is fixed by adding the init_sql folder. Postgres will auto load this into its
database which allows the app to get going right away
