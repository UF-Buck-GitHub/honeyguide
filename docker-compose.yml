version: '3'
services:
  quail:
    env_file: .env
    image: quail:hcv
    command: cron -f
    depends_on:
      - postgres
    volumes:
      - quail_data:/home/hcvprod/quailroot/batches
    build:
      context: .
      dockerfile: Dockerfile
      args:
        CAPPY_CLONE_URL: ${cappy_clone_url}
        QUAIL_CLONE_URL: ${quail_clone_url}
        PGPASSWORD: ${postgres_password}
        MINUTE: ${minute}
        HOUR: ${hour}
    environment:
      TOKEN: ${token}
      REDCAP_URL: ${redcap_url}
  postgres:
    image: 'postgres'
    env_file: .env
    ports:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_sql:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${postgres_password}
      REDASH_PASSWORD: ${redash_password}
  pg_admin:
    image: fenglc/pgadmin4
    ports:
      - "5050:5050"
    environment:
      DEFAULT_USER: quail
      DEFAULT_PASSWORD: pass
    volumes:
      - pg_admin_data:/var/lib/pgadmin
      - ./init_sql:/docker-entrypoint-initdb.d/
  redash:
    env_file: .env
    image: redash/redash:latest
    volumes:
      - quail_data:/hcvprod
    command: server
    depends_on:
      - postgres
      - redis
    ports:
      - "5000:5000"
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: "INFO"
      REDASH_REDIS_URL: "redis://redis:6379/0"
      REDASH_DATABASE_URL: ${redash_database_url}
      REDASH_COOKIE_SECRET: veryverysecret
      REDASH_WEB_WORKERS: 4
    restart: always
  worker:
    env_file: .env
    image: redash/redash:latest
    command: scheduler
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: "INFO"
      REDASH_REDIS_URL: "redis://redis:6379/0"
      REDASH_DATABASE_URL: ${redash_database_url}
      QUEUES: "queries,scheduled_queries,celery"
      WORKERS_COUNT: 2
    restart: always
  redis:
    image: redis:3.0-alpine
    restart: always
    volumes:
      - redis_data:/data
  nginx:
    image: redash/nginx:latest
    ports:
      - "8080:80"
    depends_on:
      - redash
    links:
      - redash:redash
    restart: always
volumes:
  postgres_data:
  pg_admin_data:
  quail_data:
  redis_data:
